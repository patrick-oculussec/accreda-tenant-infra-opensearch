version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - export AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID:-625867133463}
      - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
      - export IMAGE_REPO_NAME=${IMAGE_REPO_NAME:-tenant-opensearch}
      - export CONTAINER_NAME=${CONTAINER_NAME:-tenant-opensearch}
      - echo "Environment variables:"
      - echo "AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID"
      - echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
      - echo "IMAGE_REPO_NAME: $IMAGE_REPO_NAME"
      - echo "CONTAINER_NAME: $CONTAINER_NAME"
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "REPOSITORY_URI: $REPOSITORY_URI"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:-latest}
      - echo "Building image with tag $IMAGE_TAG"

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:latest .
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:latest
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing image definitions file for ECS deployment..."
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json

cache:
  paths:
    - '/root/.npm/**/*'

